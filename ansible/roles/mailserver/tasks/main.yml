- name: Updating Apt Cache
  become: yes
  apt:
    update_cache: yes

- name: "Configure Timezone"
  become: yes
  shell: |
          echo "Europe/Tallinn" > /etc/timezone && \
          dpkg-reconfigure -f noninteractive tzdata 

- name: "support install postfix non-interactively"
  become: yes
  shell: |
          echo "postfix postfix/mailname string {{ main_hostname }}" | debconf-set-selections
          echo "postfix postfix/main_mailer_type string 'Internet Site'" | debconf-set-selections
          apt-get -y install postfix

- name: Replace hostname in postfix config
  become: yes
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^myhostname'
    line: myhostname = {{ main_hostname }}

- name: Update or Create sasl password file
  become: yes
  lineinfile:
    path: /etc/postfix/sasl_passwd
    create: yes
    line: "{{ item.name }}  {{ item.smtp_cred }}"
  with_items: 
    - "{{ domainlist }}"


- name: Replace relayhost in postfix config
  become: yes
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^relayhost'
    line: relayhost = [smtp.mailgun.org]:587

- name: Insert/Update lines in postfix config
  become: yes
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK sasl auth"
    block: |
      smtp_sasl_auth_enable = yes
      smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
      smtp_sasl_security_options = noanonymous
      smtp_sender_dependent_authentication = yes

- name: Create Postfix Hash map
  become: yes
  shell: |
          postmap /etc/postfix/sasl_passwd
          rm /etc/postfix/sasl_passwd

- name: Set Postfix db permissions
  become: yes
  file:
    path: /etc/postfix/sasl_passwd.db
    mode: '0600'
  notify:
    - Restart Postfix Service

- name: Updating Apt Cache
  become: yes
  apt:
    update_cache: yes

- name: Install certbot
  become: yes
  apt:
    state: present
    pkg:
      - acl
      - certbot
      - dovecot-core 
      - dovecot-imapd 
      - dovecot-lmtpd
      - dovecot-mysql
      - dovecot-sieve
      - mariadb-server
      - nginx 
      - php-imap 
      - php-mbstring
      - php-fpm
      - php-mysql
      - php-intl
      - php-xml 
      - postfix-mysql
      - python3-certbot-nginx
      - redis-server 
      - rspamd
      - wget

- name: Stop Nginx Service
  become: yes
  systemd:
    name: nginx
    state: stopped
    enabled: yes

- name: Generate Certificates for domains
  become: yes
  shell: |
          certbot certonly  --standalone -d {{ item.mail_domain }}  --non-interactive --agree-tos -m {{ item.webmaster }}
  with_items: 
    - "{{ domainlist }}"

- name: Create Postfix SSL Map
  become: yes
  blockinfile:
    create: yes
    path: /etc/postfix/ssl_map
    block: |
      {{ item.mail_domain }}
          /etc/letsencrypt/live/{{ item.mail_domain }}/privkey.pem
          /etc/letsencrypt/live/{{ item.mail_domain }}/fullchain.pem
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.mail_domain }}"
  with_items: 
    - "{{ domainlist }}"

- name: Replace relayhost in postfix config
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-ssl.conf
    regexp: "^{{ item.old }}"
    line: "{{ item.new }}"
  loop:
    - { old: ssl_cert = </etc/dovecot/private/dovecot.pem, new: "ssl_cert = </etc/letsencrypt/live/{{ main_hostname }}/fullchain.pem" }
    - { old: ssl_key = </etc/dovecot/private/dovecot.key, new: "ssl_key = </etc/letsencrypt/live/{{ main_hostname }}/privkey.pem"  }

- name: Update SSL config Dovecot
  become: yes
  blockinfile:
    create: yes
    path: /etc/dovecot/conf.d/10-ssl.conf
    block: |
      local_name {{ item.mail_domain }} {
        ssl_cert = </etc/letsencrypt/live/{{ item.mail_domain }}/fullchain.pem
        ssl_key = </etc/letsencrypt/live/{{ item.mail_domain }}/privkey.pem
      }
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.mail_domain }}"
  with_items: 
    - "{{ domainlist }}"

- name: Hash Postfix SSL map
  become: yes
  shell: sudo postmap -F hash:/etc/postfix/ssl_map      

- name: Insert SSL map postfix config
  become: yes
  blockinfile:
    path: /etc/postfix/main.cf
    block: |
      mailbox_transport = lmtp:unix:private/dovecot-lmtp
      tls_server_sni_maps = hash:/etc/postfix/ssl_map
      smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
      smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
      smtp_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
      smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
      smtputf8_enable = no
      smtpd_milters = unix:/var/run/rspamd/milter.sock
      milter_default_action = accept

- name: Enable port 587 and 465 postfix
  become: yes
  blockinfile:
    marker: "{mark}"
    marker_begin: "#tlsproxy  unix  -       -       y       -       0       tlsproxy"
    marker_end: "#628       inet  n       -       y       -       -       qmqpd"
    path: /etc/postfix/master.cf
    block: |
      submission inet n       -       y       -       -       smtpd
       -o syslog_name=postfix/submission
       -o smtpd_tls_security_level=encrypt
       -o smtpd_sasl_auth_enable=yes
       -o smtpd_tls_auth_only=yes
       -o smtpd_reject_unlisted_recipient=no
       -o smtpd_client_restrictions=$mua_client_restrictions
       -o smtpd_helo_restrictions=$mua_helo_restrictions
       -o smtpd_sender_restrictions=$mua_sender_restrictions
       -o smtpd_recipient_restrictions=
       -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
       -o smtpd_sasl_type=dovecot
       -o smtpd_sasl_path=private/auth
       -o milter_macro_daemon_name=ORIGINATING
      smtps     inet  n       -       y       -       -       smtpd
       -o syslog_name=postfix/smtps
       -o smtpd_tls_wrappermode=yes
       -o smtpd_sasl_auth_enable=yes
       -o smtpd_reject_unlisted_recipient=no
       -o smtpd_client_restrictions=$mua_client_restrictions
       -o smtpd_helo_restrictions=$mua_helo_restrictions
       -o smtpd_sender_restrictions=$mua_sender_restrictions
       -o smtpd_recipient_restrictions=
       -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
       -o smtpd_sasl_type=dovecot
       -o smtpd_sasl_path=private/auth
       -o milter_macro_daemon_name=ORIGINATING

- name: Update Certbot config for autorenew Certificate
  become: yes
  blockinfile:
    create: yes
    path: /etc/letsencrypt/renewal-hooks/deploy/mail-permissions
    mode: 0755
    block: |
      #!/bin/sh
      setfacl -R -m u:www-data:rx /etc/letsencrypt/live/ /etc/letsencrypt/archive/
      postmap -F hash:/etc/postfix/ssl_map
      service dovecot restart
      service postfix restart

- name: "Send Dovecot master conf"
  become: yes
  copy:
    src: files/dovecot/10-master.conf
    dest: /etc/dovecot/conf.d/10-master.conf

- name: "Send Dovecot mailboxes conf"
  become: yes
  copy:
    src: files/dovecot/15-mailboxes.conf
    dest: /etc/dovecot/conf.d/15-mailboxes.conf


- name: Replace mail_location in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-mail.conf
    regexp: '^mail_location'
    line: mail_location = maildir:~/Maildir

- name: Add mail_home in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-mail.conf
    line: mail_home = /var/vmail/%d/%n

- name: Disable plaintext auth in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^#disable_plaintext_auth'
    line: disable_plaintext_auth = yes

- name: Disable system auth in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^!include auth-system.conf.ext'
    line: "#!include auth-system.conf.ext"

- name: Enable sql auth in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^#!include auth-sql.conf.ext'
    line: "!include auth-sql.conf.ext"

- name: set SSL min protocol in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^#ssl_min_protocol'
    line: ssl_min_protocol = TLSv1.2

- name: ssl_prefer_server_ciphers in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^#ssl_prefer_server_ciphers'
    line: ssl_prefer_server_ciphers = yes

- name: configure sieve in dovecot
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/20-lmtp.conf
    regexp: '^\s*#mail_plugins'
    line: mail_plugins = $mail_plugins sieve

- name: configure dovecot imap for sieve
  become: yes
  lineinfile:
    path: /etc/dovecot/conf.d/20-imap.conf
    regexp: '^\s*#mail_plugins'
    line: "   mail_plugins = $mail_plugins imap_sieve"

- name: Configure MariaDB database
  become: yes
  run_once: true
  shell: |
    #!/bin/bash
    mysql --user root <<EOF
    UPDATE mysql.global_priv SET priv=json_set(priv, '$.plugin', 'mysql_native_password', '$.authentication_string', PASSWORD('{{ mariadb_root_password }}')) WHERE User='root';
    DELETE FROM mysql.global_priv WHERE User='';
    DELETE FROM mysql.global_priv WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
    DROP DATABASE IF EXISTS test;
    DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
    CREATE DATABASE IF NOT EXISTS postfix;
    CREATE OR REPLACE USER 'postfix'@'%' IDENTIFIED BY '{{ mariadb_postfix_password }}';
    GRANT ALL PRIVILEGES ON postfix.* TO 'postfix'@'%';
    FLUSH PRIVILEGES;
    EOF

- name: Remove postfixadmin directory
  become: yes
  file:
    path: /opt/postfixadmin
    state: absent

- name: Download Postfix Admin
  unarchive:
    src: https://github.com/postfixadmin/postfixadmin/archive/postfixadmin-{{ postfixadmin_version }}.tar.gz
    dest: /opt
    remote_src: yes

- name: Change postfix directory name
  become: yes
  shell: mv /opt/postfixadmin-postfixadmin-{{ postfixadmin_version }} /opt/postfixadmin

- name: Create a postfixadmin symlink in html 
  become: yes
  file:
    src: /opt/postfixadmin/public
    dest: /var/www/html/postfixadmin
    state: link

- name: Create postfixadmin setup hash
  command: php -r 'echo password_hash("{{ postfixadmin_setup_password }}", PASSWORD_DEFAULT);'
  register: php_hash_output

- name: Set variable with hash
  set_fact:
    postfixadmin_setup_hash: "{{ php_hash_output.stdout }}"

- name: Create Postfixadmin Config
  become: yes
  blockinfile:
    path: /opt/postfixadmin/config.local.php
    create: yes
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <?php
        $CONF['database_type'] = 'mysqli';
        $CONF['database_host'] = 'localhost';
        $CONF['database_user'] = 'postfix';
        $CONF['database_password'] = '{{ mariadb_postfix_password }}';
        $CONF['database_name'] = 'postfix';
        $CONF['encrypt'] = 'dovecot:SHA512';
        $CONF['configured'] = true;
        $CONF['setup_password'] = '{{ postfixadmin_setup_hash }}';
      ?>

- name: Create a postfixadmin directory
  become: yes
  file:
    path: /opt/postfixadmin/templates_c
    state: directory
    owner: www-data
    group: www-data

- name: Add user to dovecot group
  user:
    name: www-data
    groups: dovecot
    append: yes

- name: Update nginx default site
  become: yes
  blockinfile:
    path: /etc/nginx/sites-available/default
    block: |
      #
      server {
              listen 80;
              listen [::]:80;
              server_name _;

              # SSL configuration
              #
              listen 443 ssl default_server;
              listen [::]:443 ssl default_server;
              ssl_certificate /etc/letsencrypt/live/{{ main_hostname }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/{{ main_hostname }}/privkey.pem;
              #
              # Note: You should disable gzip for SSL traffic.
              # See: https://bugs.debian.org/773332
              #
              # Read up on ssl_ciphers to ensure a secure configuration.
              # See: https://bugs.debian.org/765782
              #
              # Self signed certs generated by the ssl-cert package
              # Don't use them in a production server!
              #
              # include snippets/snakeoil.conf;

              root /var/www/html;

              # Add index.php to the list if you are using PHP
              index index.html index.htm index.nginx-debian.html index.php;

              server_name _;

              location / {
                      # First attempt to serve request as file, then
                      # as directory, then fall back to displaying a 404.
                      try_files $uri $uri/ =404;
              }

              # pass PHP scripts to FastCGI server
              #
              location ~ \.php$ {
                    include snippets/fastcgi-php.conf;
              
                    # With php-fpm (or other unix sockets):
                    fastcgi_pass unix:/run/php/php7.4-fpm.sock;
                    # With php-cgi (or other tcp sockets):
                    # fastcgi_pass 127.0.0.1:9000;
              }

              # deny access to .htaccess files, if Apache's document root
              # concurs with nginx's one
              #
              #location ~ /\.ht {
              #       deny all;
              #}
      }
    marker_begin: "# Default server configuration"
    marker_end: "# Virtual Host configuration for example.com"
    marker: "{mark}"
    state: present
  notify:
    - Restart Nginx Service
    - Reload Nginx Service

- name: Update postfix virtual mailbox config
  become: yes
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK virtual mailbox"
    block: |
      virtual_transport = lmtp:unix:private/dovecot-lmtp
      virtual_mailbox_domains =
        proxy:mysql:/etc/postfix/sql/virtual_domains_maps.cf
      virtual_mailbox_maps =
        proxy:mysql:/etc/postfix/sql/virtual_mailbox_maps.cf,
        proxy:mysql:/etc/postfix/sql/virtual_alias_domain_mailbox_maps.cf
      virtual_alias_maps =
        proxy:mysql:/etc/postfix/sql/virtual_alias_maps.cf,
        proxy:mysql:/etc/postfix/sql/virtual_alias_domain_maps.cf,
        proxy:mysql:/etc/postfix/sql/virtual_alias_domain_catchall_maps.cf
      virtual_mailbox_base = /var/vmail
      virtual_minimum_uid = 2000
      virtual_uid_maps = static:2000
      virtual_gid_maps = static:2000

- name: Update postfix virtual domains config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_domains_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT domain FROM domain WHERE domain='%s' AND active = '1'

- name: Update postfix virtual mailbox maps config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_mailbox_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT maildir FROM mailbox WHERE username='%s' AND active = '1'

- name: Update postfix virtual alias domain mailbox maps config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_alias_domain_mailbox_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT maildir FROM mailbox,alias_domain WHERE alias_domain.alias_domain = '%d' and mailbox.username = CONCAT('%u', '@', alias_domain.target_domain) AND mailbox.active = 1 AND alias_domain.active='1'

- name: Update postfix virtual alias maps config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_alias_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT goto FROM alias WHERE address='%s' AND active = '1'

- name: Update postfix virtual alias domain maps config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_alias_domain_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT goto FROM alias,alias_domain WHERE alias_domain.alias_domain = '%d' and alias.address = CONCAT('%u', '@', alias_domain.target_domain) AND alias.active = 1 AND alias_domain.active='1'

- name: Update postfix virtual alias domain catchall config
  become: yes
  blockinfile:
    path: /etc/postfix/sql/virtual_alias_domain_catchall_maps.cf
    create: yes
    block: |
      user = postfix
      password = {{ mariadb_postfix_password }}
      hosts = 127.0.0.1
      dbname = postfix
      query = SELECT goto FROM alias,alias_domain WHERE alias_domain.alias_domain = '%d' and alias.address = CONCAT('@', alias_domain.target_domain) AND alias.active = 1 AND alias_domain.active='1'

- name: Update dovecot sql auth file
  become: yes
  blockinfile:
    path: /etc/dovecot/dovecot-sql.conf.ext
    block: |
      driver = mysql
      connect = host=127.0.0.1 dbname=postfix user=postfix password={{ mariadb_postfix_password }}
      default_pass_scheme = SHA512
      password_query = SELECT username AS user,password FROM mailbox WHERE username = '%u' AND active='1'
      user_query = SELECT maildir, 2000 AS uid, 2000 AS gid FROM mailbox WHERE username = '%u' AND active='1'
      iterate_query = SELECT username AS user FROM mailbox

- name: Update Redis config
  become: yes
  blockinfile:
    path: /etc/redis/redis.conf
    block: |
       maxmemory 256mb
       maxmemory-policy volatile-ttl
  notify:
    Restart Redis Service

- name: Update Rspamd worker-proxy config
  become: yes
  blockinfile:
    path: /etc/rspamd/worker-proxy.inc
    block: |
      bind_socket = "/var/spool/postfix/var/run/rspamd/milter.sock mode=0666 owner=_rspamd";

      upstream "local" {
        default = yes;
        hosts = "localhost";
        self_scan = yes;
      }
    marker_begin: "timeout = 120s; # Needed for Milter usually"
    marker_end: "count = 1; # Do not spawn too many processes of this type"
    marker: "{mark}"
    state: present

- name: Disable rspamd normal worker
  become: yes
  lineinfile:
    path: /etc/rspamd/worker-normal.inc
    line: enabled = false;

- name: Create socket with permissions for rspamd 
  become: yes
  shell: |
      mkdir -p /var/spool/postfix/var/run/rspamd/ && chown -R _rspamd:postfix /var/spool/postfix/var/run/rspamd/

- name: Create bayes classifier rspamd
  become: yes
  blockinfile: 
    path: /etc/rspamd/local.d/classifier-bayes.conf
    create: yes
    block: |
      servers = "127.0.0.1";
      backend = "redis";
      autolearn = true;

- name: rspamd config replies
  become: yes
  lineinfile:
    path: /etc/rspamd/local.d/replies.conf
    create: yes
    line: action = "no action";
  notify:
    - Restart Rspamd Service

- name: Create config for sieve
  become: yes
  blockinfile:
    create: yes
    path: /etc/dovecot/sieve/move-spam-to-junk.sieve
    block: |
      require ["fileinto"];
      if header :is "X-Spam" "Yes" {
              fileinto "Junk";
      }

- name: Sieve report config
  become: yes
  blockinfile:
    create: yes
    path: /etc/dovecot/sieve/report-{{ item.name }}.sieve
    block: |
       require ["vnd.dovecot.pipe", "copy", "imapsieve"];
       pipe :copy "learn-{{ item.name }}.sh";
  loop:
    - {name: ham}
    - {name: spam}

- name: Sieve report script
  become: yes
  blockinfile:
    create: yes
    path: /etc/dovecot/sieve/learn-{{ item.name }}.sh 
    block: |
      #!/bin/sh
      exec /usr/bin/rspamc learn_{{ item.name }}
  loop:
    - {name: ham}
    - {name: spam}

- name: Make Sieve script executable
  become: yes
  shell: |
     chmod u=rwx,go= /etc/dovecot/sieve/learn-spam.sh
     chmod u=rwx,go= /etc/dovecot/sieve/learn-ham.sh

- name: Add plugin sieve config to dovecot
  become: yes
  blockinfile:
    path: /etc/dovecot/conf.d/90-sieve.conf
    marker_begin: "plugin {"
    marker_end: "}"
    marker: "{mark}"
    state: present
    block: |
      sieve = file:~/sieve;active=~/.dovecot.sieve
      # Move to Junk folder
      sieve_after = /etc/dovecot/sieve/move-spam-to-junk.sieve
      sieve_plugins = sieve_imapsieve sieve_extprograms
      imapsieve_mailbox1_name = Junk
      imapsieve_mailbox1_causes = COPY FLAG
      imapsieve_mailbox1_before = file:/etc/dovecot/sieve/report-spam.sieve
      # Move from Junk folder
      imapsieve_mailbox2_name = *
      imapsieve_mailbox2_from = Junk
      imapsieve_mailbox2_causes = COPY
      imapsieve_mailbox2_before = file:/etc/dovecot/sieve/report-ham.sieve
      sieve_pipe_bin_dir = /etc/dovecot/sieve
      sieve_global_extensions = +vnd.dovecot.pipe

- name: Make postfix sql executable
  become: yes
  shell: |
      chmod 640 /etc/postfix/sql/*
      setfacl -R -m u:postfix:r /etc/postfix/sql/*

- name: Ensure group vmail exists
  group:
    name: vmail
    state: present

- name: Add user vmail
  become: yes
  user:
    name: vmail
    group: vmail
    uid: 2000
    create_home: false

- name: Create Directory and give ownership
  become: yes
  shell: |
    mkdir -p /var/vmail/ && chown -R vmail:vmail /var/vmail/
  notify:
    - Restart Nginx Service
    - Reload Nginx Service
    - Restart Postfix Service
    - Restart Dovecot Service

- meta: flush_handlers

- name: Compile sieve config
  become: yes
  shell: |
    sievec /etc/dovecot/sieve/move-spam-to-junk.sieve && sievec /etc/dovecot/sieve/report-spam.sieve && sievec /etc/dovecot/sieve/report-ham.sieve

